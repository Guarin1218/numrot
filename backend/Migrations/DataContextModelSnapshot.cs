// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Helpers;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("backend.Entities.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gender_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("GenderId");

                    b.ToTable("genders", (string)null);
                });

            modelBuilder.Entity("backend.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("RoleId");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("backend.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("document_number");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("first_name");

                    b.Property<string>("FirstSurname")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("first_surname");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(40)")
                        .HasColumnName("middle_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("SecondSurname")
                        .HasColumnType("varchar(40)")
                        .HasColumnName("second_surname");

                    b.HasKey("UserId");

                    b.HasIndex("GenderId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("backend.Entities.User", b =>
                {
                    b.HasOne("backend.Entities.Gender", null)
                        .WithMany("Users")
                        .HasForeignKey("GenderId");
                });

            modelBuilder.Entity("backend.Entities.Gender", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
